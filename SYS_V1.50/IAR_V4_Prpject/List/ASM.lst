###############################################################################
#                                                                             #
#     IAR Systems ARM Assembler V4.42A/W32 01/Jul/2011  16:19:28              #
#     Copyright 1999-2007 IAR Systems. All rights reserved.                   #
#                                                                             #
#           Source file   =  D:\Design\DS203\PRG\SYS_V1.50\source\ASM.s       #
#           List file     =  D:\Design\DS203\PRG\SYS_V1.50\IAR_V4_Prpject\List\ASM.lst#
#           Object file   =  D:\Design\DS203\PRG\SYS_V1.50\IAR_V4_Prpject\Obj\ASM.r79#
#           Command line  =  D:\Design\DS203\PRG\SYS_V1.50\source\ASM.s       #
#                            -OD:\Design\DS203\PRG\SYS_V1.50\IAR_V4_Prpject\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LD:\Design\DS203\PRG\SYS_V1.50\IAR_V4_Prpject\List\ #
#                            -t8 --cpu cortex-M3 --fpu None                   #
#                            -IC:\Program Files\IAR Systems\Embedded Workbench 4.0 Evaluation\arm\INC\ #
#                                                                             #
###############################################################################

    1    00000000              ;********************* (C) COPYRIGHT 2009
                                e-Design Co.,Ltd. *********************
    2    00000000              ; File Name : ASM.c       
    3    00000000              ; Version   : DS203_SYS Ver 1.5x                
                                                 Author : bure
    4    00000000              ;***********************************************
                               ********************************
    5    00000000                RSEG  SYS_FUNC:CODE(2)
    6    00000000              //  RSEG CODE:CODE(2)
    7    00000000              ;===============================================
                               ================================
    8    00000000              ;                        System function
                                entrance
    9    00000000              ;===============================================
                               ================================
   10    00000000              ; void CTR_HP(void)     USB_HP_Interrupt
   11    00000000              ;-----------------------------------------------
                               --------------------------------
   12    00000000                IMPORT CTR_HP
   13    00000000                EXPORT __CTR_HP
   14    00000000              __CTR_HP
   15    00000000 ........         B.W    CTR_HP
   16    00000004              ;===============================================
                               ================================
   17    00000004              ; void USB_Istr(void)   USB_LP_Interrupt
   18    00000004              ;-----------------------------------------------
                               --------------------------------
   19    00000000                IMPORT USB_Istr
   20    00000000                EXPORT __USB_Istr
   21    00000004              __USB_Istr
   22    00000004 ........         B.W    USB_Istr
   23    00000008              ;===============================================
                               ================================
   24    00000008              ; void __LCD_Initial(void)  
   25    00000008              ;-----------------------------------------------
                               --------------------------------
   26    00000000                IMPORT LCD_Initial
   27    00000000                EXPORT __LCD_Initial 
   28    00000008              __LCD_Initial 
   29    00000008 ........         B.W    LCD_Initial
   30    0000000C              ;===============================================
                               ================================
   31    0000000C              ; void __Point_SCR(u16 x0, u16 y0)  
   32    0000000C              ;-----------------------------------------------
                               --------------------------------
   33    00000000                IMPORT Point_SCR
   34    00000000                EXPORT __Point_SCR 
   35    0000000C              __Point_SCR 
   36    0000000C ........         B.W    Point_SCR
   37    00000010              ;===============================================
                               ================================
   38    00000010              ; void __LCD_SetPixl(u16 Color)  
   39    00000010              ;-----------------------------------------------
                               --------------------------------
   40    00000010              
   41    00000000                EXPORT __LCD_SetPixl 
   42    00000010              __LCD_SetPixl 
   43    00000010 6AE0             B   LCD_SetPixl
   44    00000012 69E0             B   LCD_SetPixl
   45    00000014              
   46    00000014              ;===============================================
                               ================================
   47    00000014              ; void __Clear_Screen(u16 Color)  
   48    00000014              ;-----------------------------------------------
                               --------------------------------
   49    00000000                IMPORT Clear_Screen
   50    00000000                EXPORT __Clear_Screen 
   51    00000014              __Clear_Screen 
   52    00000014 ........         B.W    Clear_Screen
   53    00000018              ;===============================================
                               ================================
   54    00000018              ; u16 __Get_TAB_8x14(u8 Code, u16 Row) 
                                
   55    00000018              ;-----------------------------------------------
                               --------------------------------
   56    00000000                IMPORT Get_TAB_8x14
   57    00000000                EXPORT __Get_TAB_8x14 
   58    00000018              __Get_TAB_8x14 
   59    00000018 ........         B.W    Get_TAB_8x14
   60    0000001C              ;===============================================
                               ================================
   61    0000001C              ; void __LCD_Set_Block(u16 x1, u16 x2, u16 y1,
                                u16 y2)  
   62    0000001C              ;-----------------------------------------------
                               --------------------------------
   63    00000000                IMPORT LCD_Set_Block
   64    00000000                EXPORT __LCD_Set_Block 
   65    0000001C              __LCD_Set_Block 
   66    0000001C ........         B.W    LCD_Set_Block
   67    00000020              ;===============================================
                               ================================
   68    00000020              ; void __LCD_DMA_Ready(void)  Wait LCD data DMA
                                ready
   69    00000020              ;-----------------------------------------------
                               --------------------------------
   70    00000020              
   71    00000000                EXPORT __LCD_DMA_Ready 
   72    00000020              __LCD_DMA_Ready 
   73    00000020 6FE0             B    LCD_DMA_Ready
   74    00000022 6EE0             B    LCD_DMA_Ready
   75    00000024              
   76    00000024              ;===============================================
                               ================================
   77    00000024              ; void __LCD_Copy(uc16 *pBuffer, u16 NumPixel) 
                                Send a row data to LCD
   78    00000024              ;-----------------------------------------------
                               --------------------------------
   79    00000024              
   80    00000000                EXPORT __LCD_Copy
   81    00000024                
   82    00000024              __LCD_Copy
   83    00000024 8AE0             B    LCD_Copy
   84    00000026 89E0             B    LCD_Copy
   85    00000028              ;===============================================
                               ================================
   86    00000028              ; void __LCD_Fill(u16  *pBuffer, u16 NumPixel) 
                                Fill number of pixel by DMA 
   87    00000028              ;-----------------------------------------------
                               --------------------------------
   88    00000028              
   89    00000000                EXPORT __LCD_Fill
   90    00000028              __LCD_Fill
   91    00000028 92E0             B    LCD_Fill
   92    0000002A 91E0             B    LCD_Fill
   93    0000002C              ;===============================================
                               ================================
   94    0000002C              ; void __Row_DMA_Ready(void)  Wait row base data
                                DMA ready
   95    0000002C              ;-----------------------------------------------
                               --------------------------------
   96    0000002C              
   97    00000000                EXPORT __Row_DMA_Ready 
   98    0000002C              __Row_DMA_Ready 
   99    0000002C 5FE0             B    Row_DMA_Ready
  100    0000002E 5EE0             B    Row_DMA_Ready
  101    00000030              ;===============================================
                               ================================
  102    00000030              ; void __Row_Copy(uc16 *S_Buffer,u16 *T_Buffer)
                                Copy one row base data to buffer
  103    00000030              ;-----------------------------------------------
                               --------------------------------
  104    00000030              
  105    00000000                EXPORT __Row_Copy
  106    00000030              __Row_Copy
  107    00000030 71E0             B    Row_Copy
  108    00000032 70E0             B    Row_Copy
  109    00000034              ;===============================================
                               ================================
  110    00000034              ; u32 __Read_FIFO(void) 
  111    00000034              ;-----------------------------------------------
                               --------------------------------
  112    00000034              
  113    00000000                EXPORT __Read_FIFO  
  114    00000034              __Read_FIFO
  115    00000034 9CE0             B    Read_FIFO
  116    00000036 6EE0             B    Row_Copy
  117    00000038              ;===============================================
                               ================================
  118    00000038              ; u32 __Input_Lic(u16 x0, u8 y0, u16 Color); 
                                Return: 32Bits Licence 
  119    00000038              ;-----------------------------------------------
                               --------------------------------
  120    00000000                IMPORT Input_Lic
  121    00000000                EXPORT __Input_Lic
  122    00000038              __Input_Lic
  123    00000038 ........         B.W    Input_Lic
  124    0000003C              ;===============================================
                               ================================
  125    0000003C              ; u32 __Dev_SN(void)   Get 32bits Device Serial
                                Number
  126    0000003C              ;-----------------------------------------------
                               --------------------------------
  127    0000003C              
  128    00000000                EXPORT __Dev_SN
  129    0000003C              __Dev_SN
  130    0000003C 51E0             B    Dev_SN 
  131    0000003E 50E0             B    Dev_SN
  132    00000040              ;===============================================
                               ================================
  133    00000040              ; u8 __Chk_SYS(u32 Licence)   Check SYS licence 
                                          RET: 1 = licence ok
  134    00000040              ;-----------------------------------------------
                               --------------------------------
  135    00000040              
  136    00000000                EXPORT __Chk_SYS
  137    00000040              __Chk_SYS
  138    00000040 49E0             B    Chk_SYS
  139    00000042 48E0             B    Chk_SYS
  140    00000044              ;===============================================
                               ================================
  141    00000044              ; u8 __Ident(u32 Dev_ID, u32 Proj_ID, u32
                                Lic_No)          RET: 1 = licence ok
  142    00000044              ;-----------------------------------------------
                               --------------------------------
  143    00000044              
  144    00000000                EXPORT __Ident
  145    00000044              __Ident
  146    00000044 4AE0             B    Ident
  147    00000046 49E0             B    Ident
  148    00000048              ;===============================================
                               ================================
  149    00000048              ; void __Display_Str(u16 x0, u16 y0, u16 Color,
                                u8 Mode, u8 *s)                      
  150    00000048              ;-----------------------------------------------
                               --------------------------------
  151    00000000                IMPORT Display_Str
  152    00000000                EXPORT __Display_Str
  153    00000048              __Display_Str
  154    00000048 ........         B.W    Display_Str
  155    0000004C              ;===============================================
                               ================================
  156    0000004C              ; void __Set(u8 Device, u32 Value)           
                                Hardware control device Settings
  157    0000004C              ;-----------------------------------------------
                               --------------------------------
  158    00000000                IMPORT Set
  159    00000000                EXPORT __Set
  160    0000004C              __Set
  161    0000004C ........         B.W    Set
  162    00000050              ;===============================================
                               ================================
  163    00000050              ; void Set_Param(u8 RegAddr, u8 Parameter)    
                                Trigger control parameter set
  164    00000050              ;-----------------------------------------------
                               --------------------------------
  165    00000000                IMPORT Set_Param
  166    00000000                EXPORT __Set_Param
  167    00000050              __Set_Param
  168    00000050 ........         B.W    Set_Param
  169    00000054              ;===============================================
                               ================================
  170    00000054              ; u16 Get(u8 Kind)                      Get
                                hardware attribute & status
  171    00000054              ;-----------------------------------------------
                               --------------------------------
  172    00000000                IMPORT Get
  173    00000000                EXPORT __Get
  174    00000054              __Get
  175    00000054 ........         B.W    Get
  176    00000058              ;===============================================
                               ================================
  177    00000058              ; void __ExtFlash_PageRW(u8* pBuffer, u32
                                WriteAddr);
  178    00000058              ;-----------------------------------------------
                               --------------------------------
  179    00000000                IMPORT ExtFlash_PageWR
  180    00000000                EXPORT __ExtFlash_PageWR
  181    00000058              __ExtFlash_PageWR
  182    00000058 ........         B.W    ExtFlash_PageWR
  183    0000005C              ;===============================================
                               ================================
  184    0000005C              ; void __ExtFlash_PageRD(u8* pBuffer, u32
                                ReadAddr, u16 Lenght)
  185    0000005C              ;-----------------------------------------------
                               --------------------------------
  186    00000000                IMPORT ExtFlash_PageRD 
  187    00000000                EXPORT __ExtFlash_PageRD
  188    0000005C              __ExtFlash_PageRD
  189    0000005C ........         B.W    ExtFlash_PageRD
  190    00000060              ;===============================================
                               ================================
  191    00000060              ; u8 ReadDiskData(u8* pBuffer, u32 ReadAddr, u16
                                Lenght)
  192    00000060              ;-----------------------------------------------
                               --------------------------------
  193    00000000                IMPORT ReadDiskData
  194    00000000                EXPORT __ReadDiskData
  195    00000060              __ReadDiskData
  196    00000060 ........         B.W    ReadDiskData
  197    00000064              ;===============================================
                               ================================
  198    00000064              ; u8 ProgDiskPage(u8* pBuffer, u32 ProgAddr)
  199    00000064              ;-----------------------------------------------
                               --------------------------------
  200    00000000                IMPORT ProgDiskPage
  201    00000000                EXPORT __ProgDiskPage
  202    00000064              __ProgDiskPage
  203    00000064 ........         B.W    ProgDiskPage
  204    00000068              ;===============================================
                               ================================
  205    00000068              ; u16 __LCD_GetPixl(void)  
  206    00000068              ;-----------------------------------------------
                               --------------------------------
  207    00000000                IMPORT Get_Pixl
  208    00000000                EXPORT __LCD_GetPixl 
  209    00000068              __LCD_GetPixl 
  210    00000068 ........         B.W    Get_Pixl
  211    0000006C              ;===============================================
                               ================================
  212    0000006C              ; void __USB_Init(void)
  213    0000006C              ;-----------------------------------------------
                               --------------------------------
  214    00000000                IMPORT USB_Init
  215    00000000                EXPORT __USB_Init
  216    0000006C              __USB_Init
  217    0000006C ........         B.W    USB_Init
  218    00000070              ;===============================================
                               ================================
  219    00000070              ; u8 __FLASH_Erase(u32 Address)                 
                                                  RET: 1 = ok
  220    00000070              ;-----------------------------------------------
                               --------------------------------
  221    00000000                IMPORT FLASH_Erase
  222    00000000                EXPORT __FLASH_Erase
  223    00000070              __FLASH_Erase
  224    00000070 ........         B.W    FLASH_Erase
  225    00000074              ;===============================================
                               ================================
  226    00000074              ; u8 __FLASH_Prog(u32 Address, u16 Data)        
                                                  RET: 1 = ok    
  227    00000074              ;-----------------------------------------------
                               --------------------------------
  228    00000000                IMPORT FLASH_Prog
  229    00000000                EXPORT __FLASH_Prog
  230    00000074              __FLASH_Prog
  231    00000074 ........         B.W    FLASH_Prog
  232    00000078              ;===============================================
                               ================================
  233    00000078              ; void __FLASH_Unlock(void)
  234    00000078              ;-----------------------------------------------
                               --------------------------------
  235    00000000                IMPORT FLASH_Unlock
  236    00000000                EXPORT __FLASH_Unlock
  237    00000078              __FLASH_Unlock
  238    00000078 ........         B.W    FLASH_Unlock
  239    0000007C              ;===============================================
                               ================================
  240    0000007C              ; void __FLASH_Lock(void)
  241    0000007C              ;-----------------------------------------------
                               --------------------------------
  242    00000000                IMPORT FLASH_Lock
  243    00000000                EXPORT __FLASH_Lock
  244    0000007C              __FLASH_Lock
  245    0000007C ........         B.W    FLASH_Lock
  246    00000080              ;===============================================
                               ================================
  247    00000080              ; u8*  __Chk_DFU(void)
  248    00000080              ;-----------------------------------------------
                               --------------------------------
  249    00000000                EXPORT __Chk_DFU
  250    00000080              __Chk_DFU
  251    00000080 00F021B8         B.W    Chk_DFU
  252    00000084              ;===============================================
                               ================================
  253    00000084              ; u8*  __Chk_HDW(void)
  254    00000084              ;-----------------------------------------------
                               --------------------------------
  255    00000000                EXPORT __Chk_HDW
  256    00000084              __Chk_HDW
  257    00000084 00F023B8         B.W    Chk_HDW
  258    00000088              ;===============================================
                               ================================
  259    00000088              ; u8 OpenFileWr(u8* Buffer, u8* FileName, u16*
                                Cluster, u32* pDirAddr);
  260    00000088              ;-----------------------------------------------
                               --------------------------------
  261    00000000                IMPORT OpenFileWr
  262    00000000                EXPORT __OpenFileWr
  263    00000088              __OpenFileWr
  264    00000088 ........         B.W    OpenFileWr
  265    0000008C              ;===============================================
                               ================================
  266    0000008C              ; u8 OpenFileRd(u8* Buffer, u8* FileName, u16*
                                Cluster, u32* pDirAddr);
  267    0000008C              ;-----------------------------------------------
                               --------------------------------
  268    00000000                IMPORT OpenFileRd
  269    00000000                EXPORT __OpenFileRd
  270    0000008C              __OpenFileRd
  271    0000008C ........         B.W    OpenFileRd
  272    00000090              ;===============================================
                               ================================
  273    00000090              ; u8 ReadFileSec(u8* Buffer, u16* Cluster);
  274    00000090              ;-----------------------------------------------
                               --------------------------------
  275    00000000                IMPORT ReadFileSec
  276    00000000                EXPORT __ReadFileSec
  277    00000090              __ReadFileSec
  278    00000090 ........         B.W    ReadFileSec
  279    00000094              ;===============================================
                               ================================
  280    00000094              ; u8 ProgFileSec(u8* Buffer, u16* Cluster);
  281    00000094              ;-----------------------------------------------
                               --------------------------------
  282    00000000                IMPORT ProgFileSec
  283    00000000                EXPORT __ProgFileSec
  284    00000094              __ProgFileSec
  285    00000094 ........         B.W    ProgFileSec
  286    00000098              ;===============================================
                               ================================
  287    00000098              ; u8 CloseFile(u8* Buffer, u32 Lenght, u16*
                                Cluster, u32* pDirAddr);
  288    00000098              ;-----------------------------------------------
                               --------------------------------
  289    00000000                IMPORT CloseFile
  290    00000000                EXPORT __CloseFile
  291    00000098              __CloseFile
  292    00000098 ........         B.W    CloseFile
  293    0000009C              ;===============================================
                               ================================
  294    0000009C              ; void __Row_Fill(uc16 *S_Buffer,u16 *T_Buffer)
                                Fill one row base data to buffer
  295    0000009C              ;-----------------------------------------------
                               --------------------------------
  296    00000000                EXPORT __Row_Fill
  297    0000009C              __Row_Fill
  298    0000009C 00E0             B     Row_Fill
  299    0000009E FFE7             B     Row_Fill
  300    000000A0              ;===============================================
                               ================================
  301    000000A0                  
  302    000000A0              Row_Fill                        ;Input: R0 =
                                Source Ptr, R1 = Target Ptr
  303    000000A0 394B             LDR     R3,  =0x40020000        ;#DMA1_BASE=
                                                                   0x40020000
  304    000000A2 47F28152         MOVW    R2,  #0x7581
  305    000000A6 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
  306    000000A8              Row_Fill_1
  307    000000A8 1A6A             LDR     R2,  [R3, #0x20]    ;R2 = CNDTR2
                                                                
  308    000000AA 002A             CMP     R2,  #0
  309    000000AC FCD1             BNE     Row_Fill_1
  310    000000AE 47F28052         MOVW    R2,  #0x7580
  311    000000B2 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C0
                                                                DMA1_CH2
                                                                disabled
                                                                
  312    000000B4 40F2C902         MOVW    R2,  #0x00C9
  313    000000B8 1A62             STR     R2,  [R3, #0x20]    ;CNDTR2 = 201
                                                                
  314    000000BA 5862             STR     R0,  [R3, #0x24]    ;CPAR2  = R0
                                                                
  315    000000BC 9962             STR     R1,  [R3, #0x28]    ;CMAR2  = R1
                                                                
  316    000000BE 47F28152         MOVW    R2,  #0x7581
  317    000000C2 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
                                                                
  318    000000C4 7047             BX      LR
  319    000000C6                  
  320    000000C6              Chk_DFU
  321    000000C6 314B             LDR     R3,  =0x0800002C        ;//0x0800002
                                                                   C
  322    000000C8 0020             MOVS    R0,  #0x0000
  323    000000CA 1B68             LDR     R3,  [R3]
  324    000000CC 1847             BX      R3
  325    000000CE              
  326    000000CE              Chk_HDW
  327    000000CE 304B             LDR     R3,  =0x08000038        ;//0x0800003
                                                                   8
  328    000000D0 0020             MOVS    R0,  #0x0000
  329    000000D2 1B68             LDR     R3,  [R3]
  330    000000D4 1847             BX      R3
  331    000000D6              
  332    000000D6              Chk_SYS    
  333    000000D6 2F4B             LDR     R3,  =0x08000028        ;//0x0800002
                                                                   8
  334    000000D8 1B68             LDR     R3,  [R3]
  335    000000DA 1847             BX      R3
  336    000000DC              
  337    000000DC              Ident    
  338    000000DC 2E4B             LDR     R3,  =0x08000024        ;//0x0800002
                                                                   4
  339    000000DE 1B68             LDR     R3,  [R3]
  340    000000E0 1847             BX      R3
  341    000000E2              
  342    000000E2              Dev_SN
  343    000000E2 2E4B             LDR     R3,  =0x08000020      ;//0x08000020
  344    000000E4 1B68             LDR     R3,  [R3]
  345    000000E6 1847             BX      R3
  346    000000E8              
  347    000000E8              LCD_SetPixl
  348    000000E8 2D49             LDR     R1,  =0x60000000      ;#LCD_PORT=0x6
                                                                 0000000
  349    000000EA 0880             STRH    R0,  [R1, #0x00]     
  350    000000EC 7047             BX      LR
  351    000000EE              
  352    000000EE              Row_DMA_Ready
  353    000000EE 2649             LDR     R1,  =0x40020000        ;#DMA1_BASE=
                                                                   0x40020000
  354    000000F0 C869             LDR     R0,  [R1, #0x1C]    ;R0 = CCR2
  355    000000F2 0122             MOVS    R2,  #0x0001
  356    000000F4 40EA0200         ORR     R0,  R0, R2
  357    000000F8 C861             STR     R0,  [R1, #0x1C]    ;DMA1_CH2_EN=1
  358    000000FA              Row_DMA_Ready_1
  359    000000FA 086A             LDR     R0,  [R1, #0x20]    ;R0 = CNDTR2
                                                                
  360    000000FC 0028             CMP     R0,  #0
  361    000000FE FCD1             BNE     Row_DMA_Ready_1
  362    00000100 7047             BX      LR
  363    00000102                  
  364    00000102              LCD_DMA_Ready
  365    00000102 2849             LDR      R1,  =0x40020400        ;#DMA2_BASE
                                                                    =0x40020400
  366    00000104 8868             LDR     R0,  [R1, #0x08]    ;R0 = CCR1
  367    00000106 0122             MOVS    R2,  #0x0001
  368    00000108 40EA0200         ORR     R0,  R0, R2
  369    0000010C 8860             STR     R0,  [R1, #0x08]    ;DMA_CH1_EN=1
  370    0000010E              LCD_DMA_Ready_1
  371    0000010E C868             LDR     R0,  [R1, #0x0C]    ;R0 = CNDTR1
                                                                
  372    00000110 0028             CMP     R0,  #0
  373    00000112 FCD1             BNE     LCD_DMA_Ready_1
  374    00000114 7047             BX      LR
  375    00000116                  
  376    00000116              Row_Copy                        ;Input: R0 =
                                Source Ptr, R1 = Target Ptr
  377    00000116 1C4B             LDR      R3,  =0x40020000        ;#DMA1_BASE
                                                                    =0x40020000
  378    00000118 47F2C152         MOVW    R2,  #0x75C1
  379    0000011C DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
  380    0000011E              Row_Copy_1
  381    0000011E 1A6A             LDR     R2,  [R3, #0x20]    ;R2 = CNDTR2
                                                                
  382    00000120 002A             CMP     R2,  #0
  383    00000122 FCD1             BNE     Row_Copy_1
  384    00000124 47F2C052         MOVW    R2,  #0x75C0
  385    00000128 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C0
                                                                DMA1_CH2
                                                                disabled
                                                                
  386    0000012A 40F2C902         MOVW    R2,  #0x00C9
  387    0000012E 1A62             STR     R2,  [R3, #0x20]    ;CNDTR2 = 201
                                                                
  388    00000130 5862             STR     R0,  [R3, #0x24]    ;CPAR2  = R0
                                                                
  389    00000132 9962             STR     R1,  [R3, #0x28]    ;CMAR2  = R1
                                                                
  390    00000134 47F2C152         MOVW    R2,  #0x75C1
  391    00000138 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
                                                                
  392    0000013A 7047             BX      LR
  393    0000013C                  
  394    0000013C              LCD_Copy                        ;Input: R0 =
                                Source Ptr, R1 = Length
  395    0000013C 194B             LDR      R3,  =0x40020400        ;#DMA2_BASE
                                                                    =0x40020400
  396    0000013E 45F29052         MOVW    R2,  #0x5590
  397    00000142 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5590
                                                                DMA_CH1
                                                                disabled
                                                                
  398    00000144 5861             STR     R0,  [R3, #0x14]    ;CMAR1  = R0
                                                                
  399    00000146 D960             STR     R1,  [R3, #0x0C]    ;CNDTR1 = R1
                                                                
  400    00000148 45F29152         MOVW    R2,  #0x5591
  401    0000014C 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5591
                                                                DMA_CH1 enabled
                                                                
  402    0000014E 7047             BX      LR
  403    00000150                  
  404    00000150              LCD_Fill
  405    00000150 144B             LDR      R3,  =0x40020400        ;#DMA2_BASE
                                                                    =0x40020400
  406    00000152 45F21152         MOVW    R2,  #0x5511
  407    00000156 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5511
                                                                DMA_CH1
                                                                enabled
  408    00000158              LCD_Fill_1
  409    00000158 DA68             LDR     R2,  [R3, #0x0C]    ;R2 = CNDTR1
                                                                
  410    0000015A 002A             CMP     R2,  #0
  411    0000015C FCD1             BNE     LCD_Fill_1
  412    0000015E 45F21052         MOVW    R2,  #0x5510
  413    00000162 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5510
                                                                DMA_CH1
                                                                disabled
  414    00000164 5861             STR     R0,  [R3, #0x14]    ;CMAR1  = R0
                                                                
  415    00000166 D960             STR     R1,  [R3, #0x0C]    ;CNDTR1 = R1
                                                                
  416    00000168 45F21152         MOVW    R2,  #0x5511
  417    0000016C 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5511
                                                                DMA_CH1
                                                                enabled
  418    0000016E 7047             BX      LR
  419    00000170              
  420    00000170              Read_FIFO
  421    00000170 0D49             LDR      R1,  = 0x40011000     ; GPIO 
                                                                   PORT_C  
                                                                   
  422    00000172 40F22002         MOVW    R2,  #0x20          ; H_L pin:
                                                                GPIO_PORT_B_Bit
                                                               5 
  423    00000176 0D4B             LDR      R3,  =0x64000000    ; FIFO Port
                                                                 address
  424    00000178 4A61             STR     R2,  [R1, #0x14]    ; 0 ->
                                                                H_L
  425    0000017A 1888             LDRH    R0,  [R3, #0]       ; FIFO Data ->
                                                                R0
  426    0000017C 4FEA0040         LSL     R0,  R0,  #16
  427    00000180              
  428    00000180 0A61             STR     R2,  [R1, #0x10]    ; 1 ->
                                                                H_L
  429    00000182 1988             LDRH    R1,  [R3, #0]       ; FIFO Data ->
                                                                R1  
  430    00000184 0844             ADD     R0,  R0, R1
  431    00000186 7047             BX      LR
  432    00000188              
  433    00000188              ;-----------------------------------------------
                               --------------------------------
  434    00000188                END
  434.1  00000188                       TABLE
  434.2  00000188 00000240             Reference on line 303,353,377 
  434.3  0000018C 2C000008             Reference on line 321 
  434.4  00000190 38000008             Reference on line 327 
  434.5  00000194 28000008             Reference on line 333 
  434.6  00000198 24000008             Reference on line 338 
  434.7  0000019C 20000008             Reference on line 343 
  434.8  000001A0 00000060             Reference on line 348 
  434.9  000001A4 00040240             Reference on line 365,395,405 
  434.10 000001A8 00100140             Reference on line 421 
  434.11 000001AC 00000064             Reference on line 423 
  434.12 000001B0                      END (including table)
##############################
#          CRC:221D          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 432         #
##############################



