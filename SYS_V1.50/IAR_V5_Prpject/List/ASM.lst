###############################################################################
#                                                                             #
#     IAR Assembler V5.20.0.50892 /W32 for ARM 09/Aug/2011  14:03:27          #
#     Copyright 1999-2008 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  E:\Mini-DS\DS203\SYS_V1.50\source\ASM.s          #
#           List file     =  E:\Mini-DS\DS203\SYS_V1.50\IAR_V5_Prpject\List\ASM.lst#
#           Object file   =  E:\Mini-DS\DS203\SYS_V1.50\IAR_V5_Prpject\Obj\ASM.o#
#           Command line  =  E:\Mini-DS\DS203\SYS_V1.50\source\ASM.s          #
#                            -OE:\Mini-DS\DS203\SYS_V1.50\IAR_V5_Prpject\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LE:\Mini-DS\DS203\SYS_V1.50\IAR_V5_Prpject\List\ #
#                            -t8 --cpu Cortex-M3 --fpu None                   #
#                            -IC:\Program Files\IAR Systems\Embedded Workbench 5.0 Evaluation\ARM\INC\ #
#                                                                             #
###############################################################################

    1                          ;********************* (C) COPYRIGHT 2009
                                e-Design Co.,Ltd. *********************
    2                          ; File Name : ASM.c       
    3                          ; Version   : DS203_SYS Ver 1.5x               
                                                  Author : bure
    4                          ;**********************************************
                               *********************************
    5                            RSEG  SYS_FUNC:CODE(2)
    6                          //  RSEG CODE:CODE(2)
    7                          ;==============================================
                               =================================
    8                          ;                        System function
                                entrance
    9                          ;==============================================
                               =================================
   10                          ; void CTR_HP(void)     USB_HP_Interrupt
   11                          ;----------------------------------------------
                               ---------------------------------
   12                            IMPORT CTR_HP
   13                            EXPORT __CTR_HP
   14                          __CTR_HP
   15    00000000 ........         B.W    CTR_HP
   16                          ;==============================================
                               =================================
   17                          ; void USB_Istr(void)   USB_LP_Interrupt
   18                          ;----------------------------------------------
                               ---------------------------------
   19                            IMPORT USB_Istr
   20                            EXPORT __USB_Istr
   21                          __USB_Istr
   22    00000004 ........         B.W    USB_Istr
   23                          ;==============================================
                               =================================
   24                          ; void __LCD_Initial(void)  
   25                          ;----------------------------------------------
                               ---------------------------------
   26                            IMPORT LCD_Initial
   27                            EXPORT __LCD_Initial 
   28                          __LCD_Initial 
   29    00000008 ........         B.W    LCD_Initial
   30                          ;==============================================
                               =================================
   31                          ; void __Point_SCR(u16 x0, u16 y0)  
   32                          ;----------------------------------------------
                               ---------------------------------
   33                            IMPORT Point_SCR
   34                            EXPORT __Point_SCR 
   35                          __Point_SCR 
   36    0000000C ........         B.W    Point_SCR
   37                          ;==============================================
                               =================================
   38                          ; void __LCD_SetPixl(u16 Color)  
   39                          ;----------------------------------------------
                               ---------------------------------
   40                          
   41                            EXPORT __LCD_SetPixl 
   42                          __LCD_SetPixl 
   43    00000010 6AE0             B   LCD_SetPixl
   44    00000012 69E0             B   LCD_SetPixl
   45                          
   46                          ;==============================================
                               =================================
   47                          ; void __Clear_Screen(u16 Color)  
   48                          ;----------------------------------------------
                               ---------------------------------
   49                            IMPORT Clear_Screen
   50                            EXPORT __Clear_Screen 
   51                          __Clear_Screen 
   52    00000014 ........         B.W    Clear_Screen
   53                          ;==============================================
                               =================================
   54                          ; u16 __Get_TAB_8x14(u8 Code, u16 Row) 
                                
   55                          ;----------------------------------------------
                               ---------------------------------
   56                            IMPORT Get_TAB_8x14
   57                            EXPORT __Get_TAB_8x14 
   58                          __Get_TAB_8x14 
   59    00000018 ........         B.W    Get_TAB_8x14
   60                          ;==============================================
                               =================================
   61                          ; void __LCD_Set_Block(u16 x1, u16 x2, u16 y1,
                                u16 y2)  
   62                          ;----------------------------------------------
                               ---------------------------------
   63                            IMPORT LCD_Set_Block
   64                            EXPORT __LCD_Set_Block 
   65                          __LCD_Set_Block 
   66    0000001C ........         B.W    LCD_Set_Block
   67                          ;==============================================
                               =================================
   68                          ; void __LCD_DMA_Ready(void)  Wait LCD data DMA
                                ready
   69                          ;----------------------------------------------
                               ---------------------------------
   70                          
   71                            EXPORT __LCD_DMA_Ready 
   72                          __LCD_DMA_Ready 
   73    00000020 6FE0             B    LCD_DMA_Ready
   74    00000022 6EE0             B    LCD_DMA_Ready
   75                          
   76                          ;==============================================
                               =================================
   77                          ; void __LCD_Copy(uc16 *pBuffer, u16 NumPixel) 
                                Send a row data to LCD
   78                          ;----------------------------------------------
                               ---------------------------------
   79                          
   80                            EXPORT __LCD_Copy
   81                            
   82                          __LCD_Copy
   83    00000024 8AE0             B    LCD_Copy
   84    00000026 89E0             B    LCD_Copy
   85                          ;==============================================
                               =================================
   86                          ; void __LCD_Fill(u16  *pBuffer, u16 NumPixel) 
                                Fill number of pixel by DMA 
   87                          ;----------------------------------------------
                               ---------------------------------
   88                          
   89                            EXPORT __LCD_Fill
   90                          __LCD_Fill
   91    00000028 92E0             B    LCD_Fill
   92    0000002A 91E0             B    LCD_Fill
   93                          ;==============================================
                               =================================
   94                          ; void __Row_DMA_Ready(void)  Wait row base
                                data DMA ready
   95                          ;----------------------------------------------
                               ---------------------------------
   96                          
   97                            EXPORT __Row_DMA_Ready 
   98                          __Row_DMA_Ready 
   99    0000002C 5FE0             B    Row_DMA_Ready
  100    0000002E 5EE0             B    Row_DMA_Ready
  101                          ;==============================================
                               =================================
  102                          ; void __Row_Copy(uc16 *S_Buffer,u16 *T_Buffer)
                                Copy one row base data to buffer
  103                          ;----------------------------------------------
                               ---------------------------------
  104                          
  105                            EXPORT __Row_Copy
  106                          __Row_Copy
  107    00000030 71E0             B    Row_Copy
  108    00000032 70E0             B    Row_Copy
  109                          ;==============================================
                               =================================
  110                          ; u32 __Read_FIFO(void) 
  111                          ;----------------------------------------------
                               ---------------------------------
  112                          
  113                            EXPORT __Read_FIFO  
  114                          __Read_FIFO
  115    00000034 9CE0             B    Read_FIFO
  116    00000036 6EE0             B    Row_Copy
  117                          ;==============================================
                               =================================
  118                          ; u32 __Input_Lic(u16 x0, u8 y0, u16 Color); 
                                Return: 32Bits Licence 
  119                          ;----------------------------------------------
                               ---------------------------------
  120                            IMPORT Input_Lic
  121                            EXPORT __Input_Lic
  122                          __Input_Lic
  123    00000038 ........         B.W    Input_Lic
  124                          ;==============================================
                               =================================
  125                          ; u32 __Dev_SN(void)   Get 32bits Device Serial
                                Number
  126                          ;----------------------------------------------
                               ---------------------------------
  127                          
  128                            EXPORT __Dev_SN
  129                          __Dev_SN
  130    0000003C 51E0             B    Dev_SN 
  131    0000003E 50E0             B    Dev_SN
  132                          ;==============================================
                               =================================
  133                          ; u8 __Chk_SYS(u32 Licence)   Check SYS licence
                                           RET: 1 = licence ok
  134                          ;----------------------------------------------
                               ---------------------------------
  135                          
  136                            EXPORT __Chk_SYS
  137                          __Chk_SYS
  138    00000040 49E0             B    Chk_SYS
  139    00000042 48E0             B    Chk_SYS
  140                          ;==============================================
                               =================================
  141                          ; u8 __Ident(u32 Dev_ID, u32 Proj_ID, u32
                                Lic_No)          RET: 1 = licence ok
  142                          ;----------------------------------------------
                               ---------------------------------
  143                          
  144                            EXPORT __Ident
  145                          __Ident
  146    00000044 4AE0             B    Ident
  147    00000046 49E0             B    Ident
  148                          ;==============================================
                               =================================
  149                          ; void __Display_Str(u16 x0, u16 y0, u16 Color,
                                u8 Mode, u8 *s)                      
  150                          ;----------------------------------------------
                               ---------------------------------
  151                            IMPORT Display_Str
  152                            EXPORT __Display_Str
  153                          __Display_Str
  154    00000048 ........         B.W    Display_Str
  155                          ;==============================================
                               =================================
  156                          ; void __Set(u8 Device, u32 Value)           
                                Hardware control device Settings
  157                          ;----------------------------------------------
                               ---------------------------------
  158                            IMPORT Set
  159                            EXPORT __Set
  160                          __Set
  161    0000004C ........         B.W    Set
  162                          ;==============================================
                               =================================
  163                          ; void Set_Param(u8 RegAddr, u8 Parameter)    
                                Trigger control parameter set
  164                          ;----------------------------------------------
                               ---------------------------------
  165                            IMPORT Set_Param
  166                            EXPORT __Set_Param
  167                          __Set_Param
  168    00000050 ........         B.W    Set_Param
  169                          ;==============================================
                               =================================
  170                          ; u16 Get(u8 Kind)                      Get
                                hardware attribute & status
  171                          ;----------------------------------------------
                               ---------------------------------
  172                            IMPORT Get
  173                            EXPORT __Get
  174                          __Get
  175    00000054 ........         B.W    Get
  176                          ;==============================================
                               =================================
  177                          ; void __ExtFlash_PageRW(u8* pBuffer, u32
                                WriteAddr);
  178                          ;----------------------------------------------
                               ---------------------------------
  179                            IMPORT ExtFlash_PageWR
  180                            EXPORT __ExtFlash_PageWR
  181                          __ExtFlash_PageWR
  182    00000058 ........         B.W    ExtFlash_PageWR
  183                          ;==============================================
                               =================================
  184                          ; void __ExtFlash_PageRD(u8* pBuffer, u32
                                ReadAddr, u16 Lenght)
  185                          ;----------------------------------------------
                               ---------------------------------
  186                            IMPORT ExtFlash_PageRD 
  187                            EXPORT __ExtFlash_PageRD
  188                          __ExtFlash_PageRD
  189    0000005C ........         B.W    ExtFlash_PageRD
  190                          ;==============================================
                               =================================
  191                          ; u8 ReadDiskData(u8* pBuffer, u32 ReadAddr,
                                u16 Lenght)
  192                          ;----------------------------------------------
                               ---------------------------------
  193                            IMPORT ReadDiskData
  194                            EXPORT __ReadDiskData
  195                          __ReadDiskData
  196    00000060 ........         B.W    ReadDiskData
  197                          ;==============================================
                               =================================
  198                          ; u8 ProgDiskPage(u8* pBuffer, u32 ProgAddr)
  199                          ;----------------------------------------------
                               ---------------------------------
  200                            IMPORT ProgDiskPage
  201                            EXPORT __ProgDiskPage
  202                          __ProgDiskPage
  203    00000064 ........         B.W    ProgDiskPage
  204                          ;==============================================
                               =================================
  205                          ; u16 __LCD_GetPixl(void)  
  206                          ;----------------------------------------------
                               ---------------------------------
  207                            IMPORT Get_Pixl
  208                            EXPORT __LCD_GetPixl 
  209                          __LCD_GetPixl 
  210    00000068 ........         B.W    Get_Pixl
  211                          ;==============================================
                               =================================
  212                          ; void __USB_Init(void)
  213                          ;----------------------------------------------
                               ---------------------------------
  214                            IMPORT USB_Init
  215                            EXPORT __USB_Init
  216                          __USB_Init
  217    0000006C ........         B.W    USB_Init
  218                          ;==============================================
                               =================================
  219                          ; u8 __FLASH_Erase(u32 Address)                
                                                   RET: 1 = ok
  220                          ;----------------------------------------------
                               ---------------------------------
  221                            IMPORT FLASH_Erase
  222                            EXPORT __FLASH_Erase
  223                          __FLASH_Erase
  224    00000070 ........         B.W    FLASH_Erase
  225                          ;==============================================
                               =================================
  226                          ; u8 __FLASH_Prog(u32 Address, u16 Data)       
                                                   RET: 1 = ok    
  227                          ;----------------------------------------------
                               ---------------------------------
  228                            IMPORT FLASH_Prog
  229                            EXPORT __FLASH_Prog
  230                          __FLASH_Prog
  231    00000074 ........         B.W    FLASH_Prog
  232                          ;==============================================
                               =================================
  233                          ; void __FLASH_Unlock(void)
  234                          ;----------------------------------------------
                               ---------------------------------
  235                            IMPORT FLASH_Unlock
  236                            EXPORT __FLASH_Unlock
  237                          __FLASH_Unlock
  238    00000078 ........         B.W    FLASH_Unlock
  239                          ;==============================================
                               =================================
  240                          ; void __FLASH_Lock(void)
  241                          ;----------------------------------------------
                               ---------------------------------
  242                            IMPORT FLASH_Lock
  243                            EXPORT __FLASH_Lock
  244                          __FLASH_Lock
  245    0000007C ........         B.W    FLASH_Lock
  246                          ;==============================================
                               =================================
  247                          ; u8*  __Chk_DFU(void)
  248                          ;----------------------------------------------
                               ---------------------------------
  249                            EXPORT __Chk_DFU
  250                          __Chk_DFU
  251    00000080 21E0             B    Chk_DFU
  252    00000082 20E0             B    Chk_DFU
  253                          ;==============================================
                               =================================
  254                          ; u8*  __Chk_HDW(void)
  255                          ;----------------------------------------------
                               ---------------------------------
  256                            EXPORT __Chk_HDW
  257                          __Chk_HDW
  258    00000084 23E0             B    Chk_HDW
  259    00000086 22E0             B    Chk_HDW
  260                          ;==============================================
                               =================================
  261                          ; u8 OpenFileWr(u8* Buffer, u8* FileName, u16*
                                Cluster, u32* pDirAddr);
  262                          ;----------------------------------------------
                               ---------------------------------
  263                            IMPORT OpenFileWr
  264                            EXPORT __OpenFileWr
  265                          __OpenFileWr
  266    00000088 ........         B.W    OpenFileWr
  267                          ;==============================================
                               =================================
  268                          ; u8 OpenFileRd(u8* Buffer, u8* FileName, u16*
                                Cluster, u32* pDirAddr);
  269                          ;----------------------------------------------
                               ---------------------------------
  270                            IMPORT OpenFileRd
  271                            EXPORT __OpenFileRd
  272                          __OpenFileRd
  273    0000008C ........         B.W    OpenFileRd
  274                          ;==============================================
                               =================================
  275                          ; u8 ReadFileSec(u8* Buffer, u16* Cluster);
  276                          ;----------------------------------------------
                               ---------------------------------
  277                            IMPORT ReadFileSec
  278                            EXPORT __ReadFileSec
  279                          __ReadFileSec
  280    00000090 ........         B.W    ReadFileSec
  281                          ;==============================================
                               =================================
  282                          ; u8 ProgFileSec(u8* Buffer, u16* Cluster);
  283                          ;----------------------------------------------
                               ---------------------------------
  284                            IMPORT ProgFileSec
  285                            EXPORT __ProgFileSec
  286                          __ProgFileSec
  287    00000094 ........         B.W    ProgFileSec
  288                          ;==============================================
                               =================================
  289                          ; u8 CloseFile(u8* Buffer, u32 Lenght, u16*
                                Cluster, u32* pDirAddr);
  290                          ;----------------------------------------------
                               ---------------------------------
  291                            IMPORT CloseFile
  292                            EXPORT __CloseFile
  293                          __CloseFile
  294    00000098 ........         B.W    CloseFile
  295                          ;==============================================
                               =================================
  296                          ; void __Row_Fill(uc16 *S_Buffer,u16 *T_Buffer)
                                Fill one row base data to buffer
  297                          ;----------------------------------------------
                               ---------------------------------
  298                            EXPORT __Row_Fill
  299                          __Row_Fill
  300    0000009C 00E0             B     Row_Fill
  301    0000009E FFE7             B     Row_Fill
  302                          ;==============================================
                               =================================
  303                              
  304                          Row_Fill                        ;Input: R0 =
                                Source Ptr, R1 = Target Ptr
  305    000000A0 394B             LDR     R3,  =0x40020000        ;#DMA1_BASE=
                                                                   0x40020000
  306    000000A2 47F28152         MOVW    R2,  #0x7581
  307    000000A6 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
  308                          Row_Fill_1
  309    000000A8 1A6A             LDR     R2,  [R3, #0x20]    ;R2 = CNDTR2
                                                                
  310    000000AA 002A             CMP     R2,  #0
  311    000000AC FCD1             BNE     Row_Fill_1
  312    000000AE 47F28052         MOVW    R2,  #0x7580
  313    000000B2 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C0
                                                                DMA1_CH2
                                                                disabled
                                                                
  314    000000B4 40F2C902         MOVW    R2,  #0x00C9
  315    000000B8 1A62             STR     R2,  [R3, #0x20]    ;CNDTR2 = 201
                                                                
  316    000000BA 5862             STR     R0,  [R3, #0x24]    ;CPAR2  = R0
                                                                
  317    000000BC 9962             STR     R1,  [R3, #0x28]    ;CMAR2  = R1
                                                                
  318    000000BE 47F28152         MOVW    R2,  #0x7581
  319    000000C2 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
                                                                
  320    000000C4 7047             BX      LR
  321                              
  322                          Chk_DFU
  323    000000C6 314B             LDR     R3,  =0x0800002C        ;//0x0800002
                                                                   C
  324    000000C8 0020             MOVS    R0,  #0x0000
  325    000000CA 1B68             LDR     R3,  [R3]
  326    000000CC 1847             BX      R3
  327                          
  328                          Chk_HDW
  329    000000CE 304B             LDR     R3,  =0x08000038        ;//0x0800003
                                                                   8
  330    000000D0 0020             MOVS    R0,  #0x0000
  331    000000D2 1B68             LDR     R3,  [R3]
  332    000000D4 1847             BX      R3
  333                          
  334                          Chk_SYS    
  335    000000D6 2F4B             LDR     R3,  =0x08000028        ;//0x0800002
                                                                   8
  336    000000D8 1B68             LDR     R3,  [R3]
  337    000000DA 1847             BX      R3
  338                          
  339                          Ident    
  340    000000DC 2E4B             LDR     R3,  =0x08000024        ;//0x0800002
                                                                   4
  341    000000DE 1B68             LDR     R3,  [R3]
  342    000000E0 1847             BX      R3
  343                          
  344                          Dev_SN
  345    000000E2 2E4B             LDR     R3,  =0x08000020      ;//0x08000020
  346    000000E4 1B68             LDR     R3,  [R3]
  347    000000E6 1847             BX      R3
  348                          
  349                          LCD_SetPixl
  350    000000E8 2D49             LDR     R1,  =0x60000000      ;#LCD_PORT=0x6
                                                                 0000000
  351    000000EA 0880             STRH    R0,  [R1, #0x00]     
  352    000000EC 7047             BX      LR
  353                          
  354                          Row_DMA_Ready
  355    000000EE 2649             LDR     R1,  =0x40020000        ;#DMA1_BASE=
                                                                   0x40020000
  356    000000F0 C869             LDR     R0,  [R1, #0x1C]    ;R0 = CCR2
  357    000000F2 0122             MOVS    R2,  #0x0001
  358    000000F4 40EA0200         ORR     R0,  R0, R2
  359    000000F8 C861             STR     R0,  [R1, #0x1C]    ;DMA1_CH2_EN=1
  360                          Row_DMA_Ready_1
  361    000000FA 086A             LDR     R0,  [R1, #0x20]    ;R0 = CNDTR2
                                                                
  362    000000FC 0028             CMP     R0,  #0
  363    000000FE FCD1             BNE     Row_DMA_Ready_1
  364    00000100 7047             BX      LR
  365                              
  366                          LCD_DMA_Ready
  367    00000102 2849             LDR      R1,  =0x40020400        ;#DMA2_BASE
                                                                    =0x40020400
  368    00000104 8868             LDR     R0,  [R1, #0x08]    ;R0 = CCR1
  369    00000106 0122             MOVS    R2,  #0x0001
  370    00000108 40EA0200         ORR     R0,  R0, R2
  371    0000010C 8860             STR     R0,  [R1, #0x08]    ;DMA_CH1_EN=1
  372                          LCD_DMA_Ready_1
  373    0000010E C868             LDR     R0,  [R1, #0x0C]    ;R0 = CNDTR1
                                                                
  374    00000110 0028             CMP     R0,  #0
  375    00000112 FCD1             BNE     LCD_DMA_Ready_1
  376    00000114 7047             BX      LR
  377                              
  378                          Row_Copy                        ;Input: R0 =
                                Source Ptr, R1 = Target Ptr
  379    00000116 1C4B             LDR      R3,  =0x40020000        ;#DMA1_BASE
                                                                    =0x40020000
  380    00000118 47F2C152         MOVW    R2,  #0x75C1
  381    0000011C DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
  382                          Row_Copy_1
  383    0000011E 1A6A             LDR     R2,  [R3, #0x20]    ;R2 = CNDTR2
                                                                
  384    00000120 002A             CMP     R2,  #0
  385    00000122 FCD1             BNE     Row_Copy_1
  386    00000124 47F2C052         MOVW    R2,  #0x75C0
  387    00000128 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C0
                                                                DMA1_CH2
                                                                disabled
                                                                
  388    0000012A 40F2C902         MOVW    R2,  #0x00C9
  389    0000012E 1A62             STR     R2,  [R3, #0x20]    ;CNDTR2 = 201
                                                                
  390    00000130 5862             STR     R0,  [R3, #0x24]    ;CPAR2  = R0
                                                                
  391    00000132 9962             STR     R1,  [R3, #0x28]    ;CMAR2  = R1
                                                                
  392    00000134 47F2C152         MOVW    R2,  #0x75C1
  393    00000138 DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
                                                                
  394    0000013A 7047             BX      LR
  395                              
  396                          LCD_Copy                        ;Input: R0 =
                                Source Ptr, R1 = Length
  397    0000013C 194B             LDR      R3,  =0x40020400        ;#DMA2_BASE
                                                                    =0x40020400
  398    0000013E 45F29052         MOVW    R2,  #0x5590
  399    00000142 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5590
                                                                DMA_CH1
                                                                disabled
                                                                
  400    00000144 5861             STR     R0,  [R3, #0x14]    ;CMAR1  = R0
                                                                
  401    00000146 D960             STR     R1,  [R3, #0x0C]    ;CNDTR1 = R1
                                                                
  402    00000148 45F29152         MOVW    R2,  #0x5591
  403    0000014C 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5591
                                                                DMA_CH1 enabled
                                                                
  404    0000014E 7047             BX      LR
  405                              
  406                          LCD_Fill
  407    00000150 144B             LDR      R3,  =0x40020400        ;#DMA2_BASE
                                                                    =0x40020400
  408    00000152 45F21152         MOVW    R2,  #0x5511
  409    00000156 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5511
                                                                DMA_CH1
                                                                enabled
  410                          LCD_Fill_1
  411    00000158 DA68             LDR     R2,  [R3, #0x0C]    ;R2 = CNDTR1
                                                                
  412    0000015A 002A             CMP     R2,  #0
  413    0000015C FCD1             BNE     LCD_Fill_1
  414    0000015E 45F21052         MOVW    R2,  #0x5510
  415    00000162 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5510
                                                                DMA_CH1
                                                                disabled
  416    00000164 5861             STR     R0,  [R3, #0x14]    ;CMAR1  = R0
                                                                
  417    00000166 D960             STR     R1,  [R3, #0x0C]    ;CNDTR1 = R1
                                                                
  418    00000168 45F21152         MOVW    R2,  #0x5511
  419    0000016C 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5511
                                                                DMA_CH1
                                                                enabled
  420    0000016E 7047             BX      LR
  421                          
  422                          Read_FIFO
  423    00000170 0D49             LDR      R1,  = 0x40011000     ; GPIO 
                                                                   PORT_C  
                                                                   
  424    00000172 40F22002         MOVW    R2,  #0x20          ; H_L pin:
                                                                GPIO_PORT_B_Bit
                                                               5 
  425    00000176 0D4B             LDR      R3,  =0x64000000    ; FIFO Port
                                                                 address
  426    00000178 4A61             STR     R2,  [R1, #0x14]    ; 0 ->
                                                                H_L
  427    0000017A 1888             LDRH    R0,  [R3, #0]       ; FIFO Data ->
                                                                R0
  428    0000017C 4FEA0040         LSL     R0,  R0,  #16
  429                          
  430    00000180 0A61             STR     R2,  [R1, #0x10]    ; 1 ->
                                                                H_L
  431    00000182 1988             LDRH    R1,  [R3, #0]       ; FIFO Data ->
                                                                R1  
  432    00000184 0844             ADD     R0,  R0, R1
  433    00000186 7047             BX      LR
  434                          
  435                          ;----------------------------------------------
                               ---------------------------------
  436                            END
  436.1                                 TABLE
  436.2  00000188 00000240             Reference on line 305,355,379 
  436.3  0000018C 2C000008             Reference on line 323 
  436.4  00000190 38000008             Reference on line 329 
  436.5  00000194 28000008             Reference on line 335 
  436.6  00000198 24000008             Reference on line 340 
  436.7  0000019C 20000008             Reference on line 345 
  436.8  000001A0 00000060             Reference on line 350 
  436.9  000001A4 00040240             Reference on line 367,397,407 
  436.10 000001A8 00100140             Reference on line 423 
  436.11 000001AC 00000064             Reference on line 425 
  436.12                               END (including table)
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 432         #
##############################



